global proc shelf_PaintCityScripts () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\ncatch(`loadPlugin \"C:/Program Files/Autodesk/Maya2011/bin/plug-ins/realflow.mll\"`);\nstring $loc = `workspace -rd -q`;\nstring $sel[] = `ls -sl`;\nfile -force -options \"\" -typ \"RealFlowSD\" -pr -es ($loc + $sel[0] + \".sd\");\nprint(\">>> \" + $loc + \" <<<\");" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\nstring $sel[] = `ls -sl`;\nint $selSize = size($sel);\nselect -cl;\nfor($i = 0; $i < $selSize; $i++)\n{\n    select -hierarchy -add $sel[$i];\n    select -d $sel[$i];\n}\n\nstring $window[] = `ls -tr -sl`;\nint $vNo;\nfor($c = 0; $c < size($window); $c++)\n{    \n   \n    //SHATTER\n    select -cl;\n    hilite $window[$c];\n    select -r ($window[$c] + \".vtx[0]\");\n    crackShatter($window[$c], 1, 200, 0, 1, 0, 0, 3, \"shapes\", 0, 1);\n    \n    string $newShardgrp[] = `ls -sl`;\n    select -hi $newShardgrp[0];\n    select -d $newShardgrp[0];\n    string $newShards[] = `ls -sl -tr`;\n    select -r $newShards;\n    string $shardNames = $window[$c] + \"s\";\n    renameSelectionList($shardNames);\n}\n\nprint(\">>> COMPLETE! <<<\");" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -cl;\nselect \"*:P_PROXY_BLDS*\";\nstring $sel[] = `ls -sl -tr`;\nselect -cl;\nselect $sel;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $proxyArr[];\nclear($proxyArr);\nstring $sel[] = `ls -sl`;\nint $size = `size($sel)`;\nselect -cl;\nfor($i = 0; $i < $size; $i++)\n{\n\tselect $sel[$i];\n\tpickWalk -d \"up\";\n\tstring $tempsel[] = `ls -sl`;\n\tselect -add -hi $tempsel[0];\n    string $sel[] = `ls -sl -tr \"*:P_PROXY_BLDS*\"`;\n    $proxyArr[size($proxyArr)] = $sel[0];\n}\nselect -cl;\nselect $proxyArr; " 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\n\tpickWalk -d \"right\";\n\thyperShade -smn; //select shader attached to geometry\n    string $sel[] = `ls -sl`;\n    select -cl;\n    string $sel2[] = `hyperShade -lun $sel[0]`; //select connected nodes to shader\n    select $sel2;\n    string $rR[] = `ls -sl \"*:*:Ramp_Driver_R\"`;\n    string $rY[] = `ls -sl \"*:Ramp_Driver_Y\"`;\n    string $rP[] = `ls -sl \"*:Ramp_Driver_P\"`;\n    string $rO[] = `ls -sl \"*:Ramp_Driver_O\"`;\n    select -cl;\n\n//CREATE WINDOW\nif(`window -exists Ramp_Driver`){deleteUI -window Ramp_Driver;}\nstring $myUI = `window -title \"Ramp_Driver\" -wh 80 80 Ramp_Driver`;\t\t\t\nrowColumnLayout -numberOfColumns 1\n\t\t\t\t-cw 1 80; //1st column is 16 pixels wide\n\n\t\t //Column 1\t\t\t\t\t\t\t\t//Column2\n/*Row1*/ button\t-label \"Red\" -c \"select $rR[0]\";\n/*Row2*/ button -label \"Orange\" -c \"select $rO[0]\";\n/*Row2*/ button -label \"Yellow\" -c \"select $rY[0]\";\n/*Row2*/ button -label \"Purple\" -c \"select $rP[0]\";\n\nshowWindow $myUI;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\n\n\tpickWalk -d \"right\";\n\thyperShade -smn; //select shader attached to geometry\n    string $sel[] = `ls -sl`;\n    select -cl;\n    string $sel2[] = `hyperShade -lun $sel[0]`; //select connected nodes to shader\n    select $sel2;\n    string $rR[] = `ls -sl \"*:*:Ramp_Driver_R\"`;\n    string $rY[] = `ls -sl \"*:*:Ramp_Driver_G\"`;\n    string $rP[] = `ls -sl \"*:*:Ramp_Driver_B\"`;\n    select -cl;\n\n//CREATE WINDOW\nif(`window -exists Ramp_Driver`){deleteUI -window Ramp_Driver;}\nstring $myUI = `window -title \"Ramp_Driver\" -wh 80 80 Ramp_Driver`;\t\t\t\nrowColumnLayout -numberOfColumns 1\n\t\t\t\t-cw 1 80; //1st column is 16 pixels wide\n\n\t\t //Column 1\t\t\t\t\t\t\t\t//Column2\n/*Row1*/ button\t-label \"Red\" -c \"select $rR[0]\";\n/*Row2*/ button -label \"Green\" -c \"select $rY[0]\";\n/*Row2*/ button -label \"Blue\" -c \"select $rP[0]\";\n\nshowWindow $myUI;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//SCRIPT: \n\nstring $sel[] = `ls -sl -tr`;\nselect -cl;\nselect $sel;\n\nfor($i = 0; $i < size($sel); $i++)\n{\n    float $rno = rand(0, 0.3);//inclusive\n    float $yScale = `getAttr ($sel[$i] + \".sy\")`;\n    $yScale = 1.0 + $rno;\n    setAttr ($sel[$i] + \".sy\") $yScale;\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User-defined MEL command" 
        -enableBackground 0
        -align "center" 
        -label "MEL Command" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $sel[] = `ls -sl`;\nint $size = `size($sel)`;\nfor($i = 0; $i < $size; $i++)\n{\n\tselect -add -hi $sel[$i];\n\tselect -d $sel[$i];\n}\nstring $selection[] = `ls -sl -tr`;\nselect -cl;\nselect $selection;\n\nstring $sel[] = `ls -sl \"*:P_PROXY_BLDS*\"`;\nselect -cl;\nselect $sel;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;

} 
